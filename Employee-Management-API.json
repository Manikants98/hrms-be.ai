{
  "info": {
    "name": "Employee Management System API",
    "description": "A comprehensive collection for testing the Employee Management System API with AI-powered employee data extraction using Google Gemini.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "employee-mgmt-api-collection",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "item": [
    {
      "name": "Health & System",
      "description": "Health check and system information endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check the health status of the API and get basic system information"
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2025-08-02T10:30:00.123456\",\n  \"total_employees\": 5,\n  \"api_version\": \"1.0.0\",\n  \"documentation\": \"http://localhost:5000/docs\"\n}"
            }
          ]
        },
        {
          "name": "API Root Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Get API information and available endpoints"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Employee Management",
      "description": "Core employee CRUD operations",
      "item": [
        {
          "name": "Create Employee - Formal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"John Smith, Senior Software Engineer in Engineering Department, email: john.smith@company.com, joined on 2024-01-15\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Create an employee using formal, structured description"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"John Smith, Senior Software Engineer in Engineering Department, email: john.smith@company.com, joined on 2024-01-15\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/employees",
                  "host": ["{{base_url}}"],
                  "path": ["employees"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Employee created successfully\",\n  \"employee_id\": 1,\n  \"employee_data\": {\n    \"employee_id\": 1,\n    \"name\": \"John Smith\",\n    \"email\": \"john.smith@company.com\",\n    \"department\": \"Engineering\",\n    \"job_title\": \"Senior Software Engineer\",\n    \"joining_date\": \"2024-01-15\",\n    \"created_at\": \"2025-08-02T10:30:00.123456\",\n    \"updated_at\": \"2025-08-02T10:30:00.123456\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Employee - Casual",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"We have a new hire Sarah Johnson who's joining our Marketing team as a Marketing Manager. Her email is sarah.j@company.com and she starts tomorrow.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Create an employee using casual, conversational description"
          },
          "response": []
        },
        {
          "name": "Create Employee - Minimal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Alex Brown, HR Specialist, alex.brown@company.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Create an employee with minimal information"
          },
          "response": []
        },
        {
          "name": "Create Employee - Complex",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Emma Wilson is our new Data Scientist. She has a PhD in Statistics and will be working in the Analytics Department. You can reach her at emma.wilson@company.com. She officially started on March 1st, 2024.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Create an employee using complex, detailed description"
          },
          "response": []
        },
        {
          "name": "List All Employees",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Retrieve all employees in the system"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/employees",
                  "host": ["{{base_url}}"],
                  "path": ["employees"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"employees\": [\n    {\n      \"employee_id\": 1,\n      \"name\": \"John Smith\",\n      \"email\": \"john.smith@company.com\",\n      \"department\": \"Engineering\",\n      \"job_title\": \"Senior Software Engineer\",\n      \"joining_date\": \"2024-01-15\",\n      \"created_at\": \"2025-08-02T10:30:00.123456\",\n      \"updated_at\": \"2025-08-02T10:30:00.123456\"\n    }\n  ],\n  \"total_count\": 1,\n  \"timestamp\": \"2025-08-02T10:30:00.123456\"\n}"
            }
          ]
        },
        {
          "name": "Filter by Department",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/employees?department=Engineering",
              "host": ["{{base_url}}"],
              "path": ["employees"],
              "query": [
                {
                  "key": "department",
                  "value": "Engineering",
                  "description": "Filter employees by department (case-insensitive)"
                }
              ]
            },
            "description": "Get employees filtered by department"
          },
          "response": []
        },
        {
          "name": "Limit Results",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/employees?limit=5",
              "host": ["{{base_url}}"],
              "path": ["employees"],
              "query": [
                {
                  "key": "limit",
                  "value": "5",
                  "description": "Limit the number of results returned"
                }
              ]
            },
            "description": "Get limited number of employees"
          },
          "response": []
        },
        {
          "name": "Combined Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/employees?department=Marketing&limit=3",
              "host": ["{{base_url}}"],
              "path": ["employees"],
              "query": [
                {
                  "key": "department",
                  "value": "Marketing",
                  "description": "Filter by department"
                },
                {
                  "key": "limit",
                  "value": "3",
                  "description": "Limit results"
                }
              ]
            },
            "description": "Get employees with multiple filters applied"
          },
          "response": []
        },
        {
          "name": "Get Employee by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/employees/{{employee_id}}",
              "host": ["{{base_url}}"],
              "path": ["employees", "{{employee_id}}"]
            },
            "description": "Get specific employee details by ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/employees/1",
                  "host": ["{{base_url}}"],
                  "path": ["employees", "1"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"employee\": {\n    \"employee_id\": 1,\n    \"name\": \"John Smith\",\n    \"email\": \"john.smith@company.com\",\n    \"department\": \"Engineering\",\n    \"job_title\": \"Senior Software Engineer\",\n    \"joining_date\": \"2024-01-15\",\n    \"created_at\": \"2025-08-02T10:30:00.123456\",\n    \"updated_at\": \"2025-08-02T10:30:00.123456\"\n  },\n  \"timestamp\": \"2025-08-02T10:30:00.123456\"\n}"
            },
            {
              "name": "Employee Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/employees/999",
                  "host": ["{{base_url}}"],
                  "path": ["employees", "999"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Employee not found\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Analytics & Statistics",
      "description": "Employee statistics and analytics endpoints",
      "item": [
        {
          "name": "Get Employee Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats",
              "host": ["{{base_url}}"],
              "path": ["stats"]
            },
            "description": "Get comprehensive statistics about employees including department distribution and recent hires"
          },
          "response": [
            {
              "name": "Statistics Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/stats",
                  "host": ["{{base_url}}"],
                  "path": ["stats"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"total_employees\": 5,\n  \"departments\": {\n    \"Engineering\": 3,\n    \"Marketing\": 1,\n    \"HR\": 1\n  },\n  \"recent_hires\": 2,\n  \"timestamp\": \"2025-08-02T10:30:00.123456\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Error Testing",
      "description": "Test various error scenarios and edge cases",
      "item": [
        {
          "name": "Missing Content-Type Header",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"prompt\": \"Test Employee, test@company.com\"}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Test error handling when Content-Type header is missing"
          },
          "response": [
            {
              "name": "Unsupported Media Type",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\"prompt\": \"Test Employee, test@company.com\"}"
                },
                "url": {
                  "raw": "{{base_url}}/employees",
                  "host": ["{{base_url}}"],
                  "path": ["employees"]
                }
              },
              "status": "Unsupported Media Type",
              "code": 415,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Content-Type must be application/json\"\n}"
            }
          ]
        },
        {
          "name": "Empty Prompt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Test error handling with empty prompt"
          },
          "response": [
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/employees",
                  "host": ["{{base_url}}"],
                  "path": ["employees"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Missing or empty prompt field\"\n}"
            }
          ]
        },
        {
          "name": "Missing Prompt Field",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"This should fail because prompt field is missing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Test error handling when prompt field is missing"
          },
          "response": []
        },
        {
          "name": "Invalid JSON",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"prompt\": \"Test Employee\""
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Test error handling with malformed JSON"
          },
          "response": []
        },
        {
          "name": "Get Non-existent Employee",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/employees/999",
              "host": ["{{base_url}}"],
              "path": ["employees", "999"]
            },
            "description": "Test 404 error when requesting non-existent employee"
          },
          "response": []
        },
        {
          "name": "Invalid Employee Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Invalid data test with no proper email or name information\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            },
            "description": "Test validation error handling with incomplete data"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sample Data Creation",
      "description": "Pre-defined requests to populate the system with sample data",
      "item": [
        {
          "name": "Create Sample Employee 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Alice Johnson, Frontend Developer, alice.johnson@company.com, Engineering Department, joined February 1st 2024\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            }
          },
          "response": []
        },
        {
          "name": "Create Sample Employee 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Bob Martinez is our new Sales Manager in the Sales department. His email is bob.martinez@company.com and he started last week.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            }
          },
          "response": []
        },
        {
          "name": "Create Sample Employee 3",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Carol Davis, HR Coordinator, carol.davis@company.com, Human Resources team, started 2024-03-15\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            }
          },
          "response": []
        },
        {
          "name": "Create Sample Employee 4",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"David Kim works as a DevOps Engineer in our Engineering department. You can contact him at david.kim@company.com. He joined us on January 20th, 2024.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            }
          },
          "response": []
        },
        {
          "name": "Create Sample Employee 5",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Elena Rodriguez, Marketing Specialist, elena.rodriguez@company.com, Marketing team\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/employees",
              "host": ["{{base_url}}"],
              "path": ["employees"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Documentation",
      "description": "Access API documentation",
      "item": [
        {
          "name": "Swagger YAML Spec",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/swagger.yaml",
              "host": ["{{base_url}}"],
              "path": ["swagger.yaml"]
            },
            "description": "Get the OpenAPI specification in YAML format"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic variables",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has valid JSON format', function () {",
          "    pm.response.to.have.jsonBody();",
          "});",
          "",
          "// Store employee_id from successful creation for later use",
          "if (pm.response.code === 201 && pm.response.json().employee_id) {",
          "    pm.globals.set('employee_id', pm.response.json().employee_id);",
          "    console.log('Stored employee_id:', pm.response.json().employee_id);",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "description": "Base URL for the Employee Management API"
    },
    {
      "key": "employee_id",
      "value": "1",
      "description": "Employee ID for testing individual employee endpoints"
    }
  ]
}
